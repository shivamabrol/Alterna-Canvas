import { Component, Input } from "@angular/core";
import { DayPilot } from "./core/daypilot-core";
import { optHash, rand } from "./util";
import * as i0 from "@angular/core";
export class DayPilotMonthComponent {
    constructor() {
        this.events = [];
        this._requestUpdate = false;
        this._hashOptions = "";
        this._hashEvents = "";
        this._id = "dp_" + new Date().getTime() + rand();
    }
    get id() {
        return this._id;
    }
    ngOnInit() {
    }
    ngOnDestroy() {
        this.dispose();
    }
    ngAfterViewInit() {
        this.dispose();
        this.control = new DayPilot.Month(this.id);
        this.updateOptions();
        this.updateEvents();
        this._requestUpdate = false; // config just loaded and calling init(), no need to call update again
        this.control.init();
    }
    ngDoCheck() {
        if (!this.control) {
            return;
        }
        this.updateOptions();
        this.updateEvents();
        if (this._requestUpdate) {
            this.control.update();
            this._requestUpdate = false;
        }
    }
    dispose() {
        if (this.control) {
            this.control.dispose();
            //@ts-ignore
            this.control = null;
        }
    }
    updateOptions() {
        let hash = optHash(this.config);
        if (hash !== this._hashOptions) {
            let dp = this.control;
            dp.internal.loadOptions(this.config);
            this._requestUpdate = true;
        }
        this._hashOptions = hash;
    }
    updateEvents() {
        let hash = optHash(this.events);
        if (hash !== this._hashEvents) {
            let dp = this.control;
            dp.events.list = this.events;
            this._requestUpdate = true;
        }
        this._hashEvents = hash;
    }
}
DayPilotMonthComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DayPilotMonthComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DayPilotMonthComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: DayPilotMonthComponent, selector: "daypilot-month", inputs: { events: "events", config: "config" }, ngImport: i0, template: `
    <div id='{{id}}'></div>`, isInline: true, styles: [""] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DayPilotMonthComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'daypilot-month',
                    template: `
    <div id='{{id}}'></div>`,
                    styles: [``]
                }]
        }], propDecorators: { events: [{
                type: Input
            }], config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5cGlsb3QtbW9udGguY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZGF5cGlsb3QtcHJvLWFuZ3VsYXIvc3JjL2xpYi9kYXlwaWxvdC1tb250aC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFnQixTQUFTLEVBQVcsS0FBSyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDOUMsT0FBTyxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7O0FBUXJDLE1BQU0sT0FBTyxzQkFBc0I7SUFObkM7UUFTVyxXQUFNLEdBQXlCLEVBQUUsQ0FBQztRQUVuQyxtQkFBYyxHQUFZLEtBQUssQ0FBQztRQUNoQyxpQkFBWSxHQUFXLEVBQUUsQ0FBQztRQUMxQixnQkFBVyxHQUFXLEVBQUUsQ0FBQztRQUV6QixRQUFHLEdBQVcsS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxFQUFFLENBQUM7S0E4RDdEO0lBNURDLElBQUksRUFBRTtRQUNKLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNsQixDQUFDO0lBRUQsUUFBUTtJQUNSLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsQ0FBQyxzRUFBc0U7UUFDbkcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2pCLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7U0FDN0I7SUFDSCxDQUFDO0lBRU8sT0FBTztRQUNiLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3ZCLFlBQVk7WUFDWixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUNyQjtJQUNILENBQUM7SUFFTyxhQUFhO1FBQ25CLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEMsSUFBSSxJQUFJLEtBQUssSUFBSSxDQUFDLFlBQVksRUFBRTtZQUM5QixJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBYyxDQUFDO1lBQzdCLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztTQUM1QjtRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFFTyxZQUFZO1FBQ2xCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEMsSUFBSSxJQUFJLEtBQUssSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUM3QixJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ3RCLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDN0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7U0FDNUI7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztJQUUxQixDQUFDOzttSEF0RVUsc0JBQXNCO3VHQUF0QixzQkFBc0Isc0dBSnZCOzRCQUNnQjsyRkFHZixzQkFBc0I7a0JBTmxDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFOzRCQUNnQjtvQkFDMUIsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO2lCQUNiOzhCQUlVLE1BQU07c0JBQWQsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRG9DaGVjaywgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0fSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHtEYXlQaWxvdH0gZnJvbSBcIi4vY29yZS9kYXlwaWxvdC1jb3JlXCI7XG5pbXBvcnQge29wdEhhc2gsIHJhbmR9IGZyb20gXCIuL3V0aWxcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZGF5cGlsb3QtbW9udGgnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgaWQ9J3t7aWR9fSc+PC9kaXY+YCxcbiAgc3R5bGVzOiBbYGBdXG59KVxuZXhwb3J0IGNsYXNzIERheVBpbG90TW9udGhDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjayB7XG5cbiAgcHVibGljIGNvbnRyb2whOiBEYXlQaWxvdC5Nb250aDtcbiAgQElucHV0KCkgZXZlbnRzOiBEYXlQaWxvdC5FdmVudERhdGFbXSA9IFtdO1xuICBASW5wdXQoKSBjb25maWc6IGFueTtcbiAgcHJpdmF0ZSBfcmVxdWVzdFVwZGF0ZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9oYXNoT3B0aW9uczogc3RyaW5nID0gXCJcIjtcbiAgcHJpdmF0ZSBfaGFzaEV2ZW50czogc3RyaW5nID0gXCJcIjtcblxuICBwcml2YXRlIF9pZDogc3RyaW5nID0gXCJkcF9cIiArIG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgcmFuZCgpO1xuXG4gIGdldCBpZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuZGlzcG9zZSgpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuZGlzcG9zZSgpO1xuICAgIHRoaXMuY29udHJvbCA9IG5ldyBEYXlQaWxvdC5Nb250aCh0aGlzLmlkKTtcbiAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoKTtcbiAgICB0aGlzLnVwZGF0ZUV2ZW50cygpO1xuICAgIHRoaXMuX3JlcXVlc3RVcGRhdGUgPSBmYWxzZTsgLy8gY29uZmlnIGp1c3QgbG9hZGVkIGFuZCBjYWxsaW5nIGluaXQoKSwgbm8gbmVlZCB0byBjYWxsIHVwZGF0ZSBhZ2FpblxuICAgIHRoaXMuY29udHJvbC5pbml0KCk7XG4gIH1cblxuICBuZ0RvQ2hlY2soKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmNvbnRyb2wpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy51cGRhdGVPcHRpb25zKCk7XG4gICAgdGhpcy51cGRhdGVFdmVudHMoKTtcbiAgICBpZiAodGhpcy5fcmVxdWVzdFVwZGF0ZSkge1xuICAgICAgdGhpcy5jb250cm9sLnVwZGF0ZSgpO1xuICAgICAgdGhpcy5fcmVxdWVzdFVwZGF0ZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZGlzcG9zZSgpIHtcbiAgICBpZiAodGhpcy5jb250cm9sKSB7XG4gICAgICB0aGlzLmNvbnRyb2wuZGlzcG9zZSgpO1xuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICB0aGlzLmNvbnRyb2wgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlT3B0aW9ucygpOiB2b2lkIHtcbiAgICBsZXQgaGFzaCA9IG9wdEhhc2godGhpcy5jb25maWcpO1xuICAgIGlmIChoYXNoICE9PSB0aGlzLl9oYXNoT3B0aW9ucykge1xuICAgICAgbGV0IGRwID0gdGhpcy5jb250cm9sIGFzIGFueTtcbiAgICAgIGRwLmludGVybmFsLmxvYWRPcHRpb25zKHRoaXMuY29uZmlnKTtcbiAgICAgIHRoaXMuX3JlcXVlc3RVcGRhdGUgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLl9oYXNoT3B0aW9ucyA9IGhhc2g7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUV2ZW50cygpOiB2b2lkIHtcbiAgICBsZXQgaGFzaCA9IG9wdEhhc2godGhpcy5ldmVudHMpO1xuICAgIGlmIChoYXNoICE9PSB0aGlzLl9oYXNoRXZlbnRzKSB7XG4gICAgICBsZXQgZHAgPSB0aGlzLmNvbnRyb2w7XG4gICAgICBkcC5ldmVudHMubGlzdCA9IHRoaXMuZXZlbnRzO1xuICAgICAgdGhpcy5fcmVxdWVzdFVwZGF0ZSA9IHRydWU7XG4gICAgfVxuICAgIHRoaXMuX2hhc2hFdmVudHMgPSBoYXNoO1xuXG4gIH1cbn1cbiJdfQ==